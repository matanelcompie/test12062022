---
version: 2.1
jobs:
  deploy:
    machine:
      image: ubuntu-2004:202111-02
    resource_class: medium
    working_directory: ~/checkout
    steps:
      - checkout
      - run:
          name: check basic staff
          command: |
             pwd
             ls
      - run:
          name: install Nvm
          command: |
             sudo apt install curl
             curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash
             source ~/.profile  
             nvm install node
             nvm install 14.9.3
             nvm use 14.9.3
      - run:
          name: install Php
          command: |
             sudo apt update && sudo apt upgrade
             sudo apt install software-properties-common ca-certificates lsb-release apt-transport-https
             LC_ALL=C.UTF-8 add-apt-repository ppa:ondrej/php
             sudo apt update
             sudo apt install php7.0
             sudo apt install openssl php7.0-common php7.0-curl php7.0-json php7.0-mbstring php7.0-mysql php7.0-xml php7.0-zip
             sudo apt install php7.0-cli unzip
      - run:
          name: install Php
          command: |
             cd ~
             curl -sS https://getcomposer.org/installer -o /tmp/composer-setup.php
             HASH=`curl -sS https://composer.github.io/installer.sig`
             sudo php /tmp/composer-setup.php --install-dir=/usr/local/bin --filename=composer             
      - run:
          name: update php dependencies (run this only if composer.json has changed)
          command: |
             composer update --no-interaction --no-progress  --prefer-dist --optimize-autoloader --ignore-platform-reqs
      - run:
          name: clear laravel application cache
          command: |
             php artisan key:generate
             php artisan config:cache
             php artisan route:cache            
      - run:
          name: update database changes
          command: |
             php artisan migrate
      - run:
          name:  need .env (from shass prod) **********
          command: |
             ls
      - run:
          name:  handle client folders (run this only if react-cti folder has changed)  **********
          command: |
             cd react-cti
             npm install
             npm run webpack
      - run:
          name:  handle client folders (run this only if react-ui-v2 folder has changed)  **********
          command: |
             cd react-ui-v2
             npm install
             npm run webpack-production
      - run:
          name:  handle client folders (run this only if react-dashboard folder has changed)  **********
          command: |
             cd react-dashboard
             npm install
             npm run build
      - run:
          name:  handle client folders (run this only if react-mandates-dashboard folder has changed)  **********
          command: |
             cd react-mandates-dashboard
             npm install
             npm run build
      - run:
          name:  handle client folders (run this only if react-activists-payments folder has changed)  **********
          command: |
             cd react-activists-payments
             npm install
             npm run build
      - run:
          name:  flush client cache
          command: |
             php artisan react:hash
      - run:
          name: Send directory to the server
          command: |
             scp -r /** "$SSH_USER@$SSH_HOST:~/folder"                    

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - deploy:
          filters:
            branches:
              only: main # only deploy on the main branch
# ssh $SSH_USER@$SSH_HOST "ansible dev -m command -a 'hostname'"
# - run: ssh $SSH_USER@$SSH_HOST "ansible-playbook /home/ubuntu/ansible/playbook.yaml"
# - run: ssh $SSH_USER@$SSH_HOST "ansible dev -i /home/ubuntu/ansible/inventory -m file -a 'path=/home/ubuntu/ubuntu_test.txt state=touch'"
#- run: ssh $SSH_USER@$SSH_HOST "ansible all -i inventory -m ping"
